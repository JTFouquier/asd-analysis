else if (metric == "absolute_delta_shannon"){ x.label = "Change in Shannon Diversity" }
else if (metric == "absolute_delta_faith"){ x.label = "Change in Faith's PD" }
else if (metric == "absolute_delta_observed_otus"){ x.label = "Change in Observed OTUs" }
else if (metric == "absolute_delta_evenness"){ x.label = "Change in Evenness" }
return(x.label)
}
for (behavior.metric in c('absolute_hyperactivity', 'absolute_inapp_speech',
'absolute_irritability', 'absolute_lethargy', 'absolute_stereotypy')) {
p_list = c()
for (microbiome.metric in c('unweighted_unifrac', 'weighted_unifrac',
'absolute_delta_shannon',
'absolute_delta_faith',
'absolute_delta_observed_otus',
'absolute_delta_evenness')){
exp_var = unlist(metadata[microbiome.metric])
res_var = unlist(metadata[behavior.metric])
x.label = getMicrobiomeLabels(microbiome.metric)
label.list = getSeverityLabels(behavior.metric)
y.label = label.list[1]
plot.title = label.list[2]
euclidean_diet = metadata$euclidean_diet
# REDUCED MODEL
model.reduced = lmer(res_var ~ euclidean_diet + (1+exp_var|subject),
REML=FALSE)
print(summary(model.reduced))
# FULL MODEL
model.full = lmer(res_var ~ exp_var + euclidean_diet + (1 + exp_var|subject),
REML=FALSE)
# print(summary(model.full))
# get values from ANOVA result
model_anova = anova(model.full, model.reduced)
estimate = model.full@pp$delb[2]; p = model_anova$`Pr(>Chisq)`[2]; chisq = model_anova$Chisq[2]; df = model_anova$`Chi Df`[2]
print(x.label)
print(y.label)
print('estimate'); print(estimate)
print('chi squared'); print(chisq)
print('p'); print(round(p, 4))
p_list = c(p_list, p)
# PLOT WITH ONE LINEAR REGRESSION LINE
my_plot = ggplot(metadata, aes(exp_var, res_var)) +
geom_point(aes(group=Subject_Str, colour=Subject_Str), size=6) +
geom_smooth(method="lm", se=FALSE, size=1.9, color='gray61') +
labs(x=x.label, y=y.label, fill="Individual") +
scale_color_manual(values=c("indianred1", "#FB61D7", "goldenrod2",
"#53B400", "seagreen2", "#00B6EB",  "#A58AFF")) +
ggtitle(paste(plot.title, ' p=', round(p, 4))) +
guides(color=guide_legend(title="Individual")) +
theme(axis.title=element_text(size=16, face= "bold"),
plot.title = element_text(size = 24, face = "bold"),
legend.title = element_text(size = 14),
axis.text=element_text(size=13))
print(my_plot)
# view plot in Rstudio plot panel/frame in addition to saving to PDF
# start a PDF file, print file to the PDF file, the dev.off() to close. File will be named
# using the x & y labels in addition to what is written below
pdf(paste(x.label, "_", y.label, "_", round(p, 4), pdf.title, sep=""))  #open a pdf device
print(my_plot)
dev.off()
}
print(p_list)
}
rm(list=ls()) # clear env
options(scipen = 999) # don't use scientific notation
# add library load script
# library(lme4)
# library(ggplot2)
# install.packages("ggsn")
# library(ggsn)
pdf.title = "_LME_severity_diet_only_20190717.pdf"
# USE for comparison to Euclidean distance matrices. These are pairwise comparisons
metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_asd_unifrac_ABSOLUTE.csv")
# Use for individual ASD behavioral severity metrics comparison to shannon (without deltas)
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_asd_individual_shannon.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_controls_diet.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_asd_diet_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_all_samples_diet_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_controls_diet_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_controls_gi_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_asd_gi_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_combined_diet_unifrac.csv")
subject = metadata$Subject
# make sure to change axis labels here. They are also used to name the PDF file
# absolute_irritability	absolute_hyperactivity	absolute_stereotypy
# absolute_inapp_speech	absolute_lethargy	irritability	hyperactivity	stereotypy	inapp_speech	lethargy	weighted_unifrac	unweighted_unifrac	euclidean_severity	euclidean_diet	absolute_delta_shannon	absolute_delta_faith	absolute_delta_observed_otus	absolute_delta_evenness
# can microbiome metrics (beta div or alpha div) explain the response variable
# in our case the autism severity
getSeverityLabels <- function(metric){
if (metric == "absolute_hyperactivity"){
y.label = "Change in Absolute Hyperactivity"
plot.title = "Hyperactivity"
}
else if (metric == "absolute_inapp_speech"){
y.label = "Change in Absolute Inappropriate Speech"
plot.title = "Inappropriate Speech"
}
else if (metric == "absolute_irritability"){
y.label = "Change in Absolute irritability"
plot.title = "Irritability"
}
else if (metric == 'absolute_lethargy'){
y.label = "Change in Absolute Lethargy"
plot.title = "Lethargy"
}
else if (metric == 'absolute_stereotypy'){
y.label = "Change in Absolute Stereotypy"
plot.title = "Stereotypy"
}
return(list(y.label, plot.title))
}
getMicrobiomeLabels <- function(metric){
if (metric == "unweighted_unifrac"){ x.label = "Unweighted UniFrac Distance"}
else if (metric == "weighted_unifrac"){ x.label = "Weighted Unifrac Distance" }
else if (metric == "absolute_delta_shannon"){ x.label = "Change in Shannon Diversity" }
else if (metric == "absolute_delta_faith"){ x.label = "Change in Faith's PD" }
else if (metric == "absolute_delta_observed_otus"){ x.label = "Change in Observed OTUs" }
else if (metric == "absolute_delta_evenness"){ x.label = "Change in Evenness" }
return(x.label)
}
for (microbiome.metric in c('unweighted_unifrac', 'weighted_unifrac',
'absolute_delta_shannon',
'absolute_delta_faith',
'absolute_delta_observed_otus',
'absolute_delta_evenness')){
p_list = c()
for (behavior.metric in c('absolute_hyperactivity', 'absolute_inapp_speech',
'absolute_irritability', 'absolute_lethargy', 'absolute_stereotypy')) {
exp_var = unlist(metadata[microbiome.metric])
res_var = unlist(metadata[behavior.metric])
x.label = getMicrobiomeLabels(microbiome.metric)
label.list = getSeverityLabels(behavior.metric)
y.label = label.list[1]
plot.title = label.list[2]
euclidean_diet = metadata$euclidean_diet
# REDUCED MODEL
model.reduced = lmer(res_var ~ euclidean_diet + (1+exp_var|subject),
REML=FALSE)
print(summary(model.reduced))
# FULL MODEL
model.full = lmer(res_var ~ exp_var + euclidean_diet + (1 + exp_var|subject),
REML=FALSE)
# print(summary(model.full))
# get values from ANOVA result
model_anova = anova(model.full, model.reduced)
estimate = model.full@pp$delb[2]; p = model_anova$`Pr(>Chisq)`[2]; chisq = model_anova$Chisq[2]; df = model_anova$`Chi Df`[2]
print(x.label)
print(y.label)
print('estimate'); print(estimate)
print('chi squared'); print(chisq)
print('p'); print(round(p, 4))
p_list = c(p_list, p)
# PLOT WITH ONE LINEAR REGRESSION LINE
my_plot = ggplot(metadata, aes(exp_var, res_var)) +
geom_point(aes(group=Subject_Str, colour=Subject_Str), size=6) +
geom_smooth(method="lm", se=FALSE, size=1.9, color='gray61') +
labs(x=x.label, y=y.label, fill="Individual") +
scale_color_manual(values=c("indianred1", "#FB61D7", "goldenrod2",
"#53B400", "seagreen2", "#00B6EB",  "#A58AFF")) +
ggtitle(paste(plot.title, ' p=', round(p, 4))) +
guides(color=guide_legend(title="Individual")) +
theme(axis.title=element_text(size=16, face= "bold"),
plot.title = element_text(size = 24, face = "bold"),
legend.title = element_text(size = 14),
axis.text=element_text(size=13))
print(my_plot)
# view plot in Rstudio plot panel/frame in addition to saving to PDF
# start a PDF file, print file to the PDF file, the dev.off() to close. File will be named
# using the x & y labels in addition to what is written below
pdf(paste(x.label, "_", y.label, "_", round(p, 4), pdf.title, sep=""))  #open a pdf device
print(my_plot)
dev.off()
}
print(p_list)
}
rm(list=ls()) # clear env
options(scipen = 999) # don't use scientific notation
# add library load script
# library(lme4)
# library(ggplot2)
# install.packages("ggsn")
# library(ggsn)
pdf.title = "_LME_severity_diet_only_20190717.pdf"
# USE for comparison to Euclidean distance matrices. These are pairwise comparisons
metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_asd_unifrac_ABSOLUTE.csv")
# Use for individual ASD behavioral severity metrics comparison to shannon (without deltas)
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_asd_individual_shannon.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_controls_diet.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_asd_diet_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_all_samples_diet_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_controls_diet_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_controls_gi_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_asd_gi_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_combined_diet_unifrac.csv")
subject = metadata$Subject
# make sure to change axis labels here. They are also used to name the PDF file
# absolute_irritability	absolute_hyperactivity	absolute_stereotypy
# absolute_inapp_speech	absolute_lethargy	irritability	hyperactivity	stereotypy	inapp_speech	lethargy	weighted_unifrac	unweighted_unifrac	euclidean_severity	euclidean_diet	absolute_delta_shannon	absolute_delta_faith	absolute_delta_observed_otus	absolute_delta_evenness
# can microbiome metrics (beta div or alpha div) explain the response variable
# in our case the autism severity
getSeverityLabels <- function(metric){
if (metric == "absolute_hyperactivity"){
y.label = "Change in Absolute Hyperactivity"
plot.title = "Hyperactivity"
}
else if (metric == "absolute_inapp_speech"){
y.label = "Change in Absolute Inappropriate Speech"
plot.title = "Inappropriate Speech"
}
else if (metric == "absolute_irritability"){
y.label = "Change in Absolute irritability"
plot.title = "Irritability"
}
else if (metric == 'absolute_lethargy'){
y.label = "Change in Absolute Lethargy"
plot.title = "Lethargy"
}
else if (metric == 'absolute_stereotypy'){
y.label = "Change in Absolute Stereotypy"
plot.title = "Stereotypy"
}
return(list(y.label, plot.title))
}
getMicrobiomeLabels <- function(metric){
if (metric == "unweighted_unifrac"){ x.label = "Unweighted UniFrac Distance"}
else if (metric == "weighted_unifrac"){ x.label = "Weighted Unifrac Distance" }
else if (metric == "absolute_delta_shannon"){ x.label = "Change in Shannon Diversity" }
else if (metric == "absolute_delta_faith"){ x.label = "Change in Faith's PD" }
else if (metric == "absolute_delta_observed_otus"){ x.label = "Change in Observed OTUs" }
else if (metric == "absolute_delta_evenness"){ x.label = "Change in Evenness" }
return(x.label)
}
for (microbiome.metric in c('unweighted_unifrac', 'weighted_unifrac',
'absolute_delta_shannon',
'absolute_delta_faith',
'absolute_delta_observed_otus',
'absolute_delta_evenness')){
p_list = c()
for (behavior.metric in c('absolute_hyperactivity', 'absolute_inapp_speech',
'absolute_irritability', 'absolute_lethargy', 'absolute_stereotypy')) {
exp_var = unlist(metadata[microbiome.metric])
res_var = unlist(metadata[behavior.metric])
x.label = getMicrobiomeLabels(microbiome.metric)
label.list = getSeverityLabels(behavior.metric)
y.label = label.list[1]
plot.title = label.list[2]
euclidean_diet = metadata$euclidean_diet
# REDUCED MODEL
model.reduced = lmer(res_var ~ euclidean_diet + (1+exp_var|subject),
REML=FALSE)
print(summary(model.reduced))
# FULL MODEL
model.full = lmer(res_var ~ exp_var + euclidean_diet + (1 + exp_var|subject),
REML=FALSE)
# print(summary(model.full))
# get values from ANOVA result
model_anova = anova(model.full, model.reduced)
estimate = model.full@pp$delb[2]; p = model_anova$`Pr(>Chisq)`[2]; chisq = model_anova$Chisq[2]; df = model_anova$`Chi Df`[2]
print(x.label)
print(y.label)
print('estimate'); print(estimate)
print('chi squared'); print(chisq)
print('p'); print(round(p, 4))
p_list = c(p_list, p)
# PLOT WITH ONE LINEAR REGRESSION LINE
my_plot = ggplot(metadata, aes(exp_var, res_var)) +
geom_point(aes(group=Subject_Str, colour=Subject_Str), size=6) +
geom_smooth(method="lm", se=FALSE, size=1.9, color='gray61') +
labs(x=x.label, y=y.label, fill="Individual") +
scale_color_manual(values=c("indianred1", "#FB61D7", "goldenrod2",
"#53B400", "seagreen2", "#00B6EB",  "#A58AFF")) +
ggtitle(paste(plot.title, ' p=', round(p, 4))) +
guides(color=guide_legend(title="Individual")) +
theme(axis.title=element_text(size=16, face= "bold"),
plot.title = element_text(size = 24, face = "bold"),
legend.title = element_text(size = 14),
axis.text=element_text(size=13))
print(my_plot)
# view plot in Rstudio plot panel/frame in addition to saving to PDF
# start a PDF file, print file to the PDF file, the dev.off() to close. File will be named
# using the x & y labels in addition to what is written below
pdf(paste(x.label, "_", y.label, "_", round(p, 4), pdf.title, sep=""))  #open a pdf device
print(my_plot)
dev.off()
}
print(p_list)
print(p.adjust(p_list, method='fdr'))
}
rm(list=ls()) # clear env
options(scipen = 999) # don't use scientific notation
# add library load script
# library(lme4)
# library(ggplot2)
# install.packages("ggsn")
# library(ggsn)
pdf.title = "_LME_severity_diet_only_20190717.pdf"
# USE for comparison to Euclidean distance matrices. These are pairwise comparisons
metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_asd_unifrac_ABSOLUTE.csv")
# Use for individual ASD behavioral severity metrics comparison to shannon (without deltas)
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_asd_individual_shannon.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_controls_diet.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_asd_diet_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_all_samples_diet_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_controls_diet_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_controls_gi_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_asd_gi_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_combined_diet_unifrac.csv")
subject = metadata$Subject
# make sure to change axis labels here. They are also used to name the PDF file
# absolute_irritability	absolute_hyperactivity	absolute_stereotypy
# absolute_inapp_speech	absolute_lethargy	irritability	hyperactivity	stereotypy	inapp_speech	lethargy	weighted_unifrac	unweighted_unifrac	euclidean_severity	euclidean_diet	absolute_delta_shannon	absolute_delta_faith	absolute_delta_observed_otus	absolute_delta_evenness
# can microbiome metrics (beta div or alpha div) explain the response variable
# in our case the autism severity
getSeverityLabels <- function(metric){
if (metric == "absolute_hyperactivity"){
y.label = "Change in Absolute Hyperactivity"
plot.title = "Hyperactivity"
}
else if (metric == "absolute_inapp_speech"){
y.label = "Change in Absolute Inappropriate Speech"
plot.title = "Inappropriate Speech"
}
else if (metric == "absolute_irritability"){
y.label = "Change in Absolute irritability"
plot.title = "Irritability"
}
else if (metric == 'absolute_lethargy'){
y.label = "Change in Absolute Lethargy"
plot.title = "Lethargy"
}
else if (metric == 'absolute_stereotypy'){
y.label = "Change in Absolute Stereotypy"
plot.title = "Stereotypy"
}
return(list(y.label, plot.title))
}
getMicrobiomeLabels <- function(metric){
if (metric == "unweighted_unifrac"){ x.label = "Unweighted UniFrac Distance"}
else if (metric == "weighted_unifrac"){ x.label = "Weighted Unifrac Distance" }
else if (metric == "absolute_delta_shannon"){ x.label = "Change in Shannon Diversity" }
else if (metric == "absolute_delta_faith"){ x.label = "Change in Faith's PD" }
else if (metric == "absolute_delta_observed_otus"){ x.label = "Change in Observed OTUs" }
else if (metric == "absolute_delta_evenness"){ x.label = "Change in Evenness" }
return(x.label)
}
for (microbiome.metric in c('unweighted_unifrac', 'weighted_unifrac',
'absolute_delta_shannon',
'absolute_delta_faith',
'absolute_delta_observed_otus',
'absolute_delta_evenness')){
p_list = c()
for (behavior.metric in c('absolute_hyperactivity', 'absolute_inapp_speech',
'absolute_irritability', 'absolute_lethargy', 'absolute_stereotypy')) {
exp_var = unlist(metadata[microbiome.metric])
res_var = unlist(metadata[behavior.metric])
x.label = getMicrobiomeLabels(microbiome.metric)
label.list = getSeverityLabels(behavior.metric)
y.label = label.list[1]
plot.title = label.list[2]
euclidean_diet = metadata$euclidean_diet
# REDUCED MODEL
model.reduced = lmer(res_var ~ euclidean_diet + (1+exp_var|subject),
REML=FALSE)
print(summary(model.reduced))
# FULL MODEL
model.full = lmer(res_var ~ exp_var + euclidean_diet + (1 + exp_var|subject),
REML=FALSE)
# print(summary(model.full))
# get values from ANOVA result
model_anova = anova(model.full, model.reduced)
estimate = model.full@pp$delb[2]; p = model_anova$`Pr(>Chisq)`[2]; chisq = model_anova$Chisq[2]; df = model_anova$`Chi Df`[2]
print(x.label)
print(y.label)
print('estimate'); print(estimate)
print('chi squared'); print(chisq)
print('p'); print(round(p, 4))
p_list = c(p_list, p)
# PLOT WITH ONE LINEAR REGRESSION LINE
my_plot = ggplot(metadata, aes(exp_var, res_var)) +
geom_point(aes(group=Subject_Str, colour=Subject_Str), size=6) +
geom_smooth(method="lm", se=FALSE, size=1.9, color='gray61') +
labs(x=x.label, y=y.label, fill="Individual") +
scale_color_manual(values=c("indianred1", "#FB61D7", "goldenrod2",
"#53B400", "seagreen2", "#00B6EB",  "#A58AFF")) +
ggtitle(paste(plot.title, ' p=', round(p, 4))) +
guides(color=guide_legend(title="Individual")) +
theme(axis.title=element_text(size=16, face= "bold"),
plot.title = element_text(size = 24, face = "bold"),
legend.title = element_text(size = 14),
axis.text=element_text(size=13))
print(my_plot)
# view plot in Rstudio plot panel/frame in addition to saving to PDF
# start a PDF file, print file to the PDF file, the dev.off() to close. File will be named
# using the x & y labels in addition to what is written below
pdf(paste(x.label, "_", y.label, "_", round(p, 4), pdf.title, sep=""))  #open a pdf device
print(my_plot)
dev.off()
}
print(p_list)
print(p.adjust(p_list, method='fdr'))
}
rm(list=ls()) # clear env
options(scipen = 999) # don't use scientific notation
# add library load script
# library(lme4)
# library(ggplot2)
# install.packages("ggsn")
# library(ggsn)
pdf.title = "_LME_severity_diet_only_20190717.pdf"
# USE for comparison to Euclidean distance matrices. These are pairwise comparisons
metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_asd_unifrac_ABSOLUTE.csv")
# Use for individual ASD behavioral severity metrics comparison to shannon (without deltas)
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_asd_individual_shannon.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_controls_diet.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_asd_diet_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_all_samples_diet_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_controls_diet_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_controls_gi_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_asd_gi_unifrac.csv")
# metadata = read.csv("/Users/jenniferfouquier/repos/linear_regression/lme4/jf_data_combined_diet_unifrac.csv")
subject = metadata$Subject
# make sure to change axis labels here. They are also used to name the PDF file
# absolute_irritability	absolute_hyperactivity	absolute_stereotypy
# absolute_inapp_speech	absolute_lethargy	irritability	hyperactivity	stereotypy	inapp_speech	lethargy	weighted_unifrac	unweighted_unifrac	euclidean_severity	euclidean_diet	absolute_delta_shannon	absolute_delta_faith	absolute_delta_observed_otus	absolute_delta_evenness
# can microbiome metrics (beta div or alpha div) explain the response variable
# in our case the autism severity
getSeverityLabels <- function(metric){
if (metric == "absolute_hyperactivity"){
y.label = "Change in Absolute Hyperactivity"
plot.title = "Hyperactivity"
}
else if (metric == "absolute_inapp_speech"){
y.label = "Change in Absolute Inappropriate Speech"
plot.title = "Inappropriate Speech"
}
else if (metric == "absolute_irritability"){
y.label = "Change in Absolute irritability"
plot.title = "Irritability"
}
else if (metric == 'absolute_lethargy'){
y.label = "Change in Absolute Lethargy"
plot.title = "Lethargy"
}
else if (metric == 'absolute_stereotypy'){
y.label = "Change in Absolute Stereotypy"
plot.title = "Stereotypy"
}
return(list(y.label, plot.title))
}
getMicrobiomeLabels <- function(metric){
if (metric == "unweighted_unifrac"){ x.label = "Unweighted UniFrac Distance"}
else if (metric == "weighted_unifrac"){ x.label = "Weighted Unifrac Distance" }
else if (metric == "absolute_delta_shannon"){ x.label = "Change in Shannon Diversity" }
else if (metric == "absolute_delta_faith"){ x.label = "Change in Faith's PD" }
else if (metric == "absolute_delta_observed_otus"){ x.label = "Change in Observed OTUs" }
else if (metric == "absolute_delta_evenness"){ x.label = "Change in Evenness" }
return(x.label)
}
for (microbiome.metric in c('unweighted_unifrac', 'weighted_unifrac',
'absolute_delta_shannon',
'absolute_delta_faith',
'absolute_delta_observed_otus',
'absolute_delta_evenness')){
p_list = c()
for (behavior.metric in c('absolute_hyperactivity', 'absolute_inapp_speech',
'absolute_irritability', 'absolute_lethargy', 'absolute_stereotypy')) {
exp_var = unlist(metadata[microbiome.metric])
res_var = unlist(metadata[behavior.metric])
x.label = getMicrobiomeLabels(microbiome.metric)
label.list = getSeverityLabels(behavior.metric)
y.label = label.list[1]
plot.title = label.list[2]
euclidean_diet = metadata$euclidean_diet
# REDUCED MODEL
model.reduced = lmer(res_var ~ euclidean_diet + (1+exp_var|subject),
REML=FALSE)
print(summary(model.reduced))
# FULL MODEL
model.full = lmer(res_var ~ exp_var + euclidean_diet + (1 + exp_var|subject),
REML=FALSE)
# print(summary(model.full))
# get values from ANOVA result
model_anova = anova(model.full, model.reduced)
estimate = model.full@pp$delb[2]; p = model_anova$`Pr(>Chisq)`[2]; chisq = model_anova$Chisq[2]; df = model_anova$`Chi Df`[2]
print(x.label)
print(y.label)
print('estimate'); print(estimate)
print('chi squared'); print(chisq)
print('p'); print(round(p, 4))
p_list = c(p_list, p)
# PLOT WITH ONE LINEAR REGRESSION LINE
my_plot = ggplot(metadata, aes(exp_var, res_var)) +
geom_point(aes(group=Subject_Str, colour=Subject_Str), size=6) +
geom_smooth(method="lm", se=FALSE, size=1.9, color='gray61') +
labs(x=x.label, y=y.label, fill="Individual") +
scale_color_manual(values=c("indianred1", "#FB61D7", "goldenrod2",
"#53B400", "seagreen2", "#00B6EB",  "#A58AFF")) +
ggtitle(paste(plot.title, ' p=', round(p, 4))) +
guides(color=guide_legend(title="Individual")) +
theme(axis.title=element_text(size=16, face= "bold"),
plot.title = element_text(size = 24, face = "bold"),
legend.title = element_text(size = 14),
axis.text=element_text(size=13))
print(my_plot)
# view plot in Rstudio plot panel/frame in addition to saving to PDF
# start a PDF file, print file to the PDF file, the dev.off() to close. File will be named
# using the x & y labels in addition to what is written below
pdf(paste(x.label, "_", y.label, "_", round(p, 4), pdf.title, sep=""))  #open a pdf device
print(my_plot)
dev.off()
}
print(p_list)
print(p.adjust(p_list, method='fdr'))
}
